"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const AuthController_1 = require("../controllers/AuthController");
const validation_1 = require("../middleware/validation");
const auth_1 = require("../middleware/auth");
const errorHandler_1 = require("../middleware/errorHandler");
const rateLimiting_1 = require("../middleware/rateLimiting");
const router = (0, express_1.Router)();
const authController = new AuthController_1.AuthController();
router.post('/validate-cpf', rateLimiting_1.cpfValidationRateLimit.middleware(), validation_1.validateCpf, (0, errorHandler_1.asyncHandler)(authController.validateCpf.bind(authController)));
router.post('/register', rateLimiting_1.registrationRateLimit.middleware(), validation_1.validateUserRegistration, (0, errorHandler_1.asyncHandler)(authController.register.bind(authController)));
router.post('/login', validation_1.validateLogin, (0, errorHandler_1.asyncHandler)(authController.login.bind(authController)));
router.post('/refresh-token', (0, errorHandler_1.asyncHandler)(authController.refreshToken.bind(authController)));
router.post('/forgot-password', (0, errorHandler_1.asyncHandler)(authController.forgotPassword.bind(authController)));
router.post('/reset-password', (0, errorHandler_1.asyncHandler)(authController.resetPassword.bind(authController)));
router.post('/logout', auth_1.authenticate, (0, errorHandler_1.asyncHandler)(authController.logout.bind(authController)));
router.get('/me', auth_1.authenticate, (0, errorHandler_1.asyncHandler)(authController.getProfile.bind(authController)));
router.put('/me', auth_1.authenticate, (0, errorHandler_1.asyncHandler)(authController.updateProfile.bind(authController)));
router.put('/change-password', auth_1.authenticate, (0, errorHandler_1.asyncHandler)(authController.changePassword.bind(authController)));
exports.default = router;
//# sourceMappingURL=auth.js.map